[{"path":"basic/basic.component.css","content":".list{\r\n  margin: 20px 0;\r\n}"},{"path":"basic/basic.component.html","content":"<div class=\"container\" ntPagingContainer #paging=\"ntPaging\" url=\"/api/getPagingData\">  \n  <span style=\"color: #888;font-size: small;\">*可以点击刷新查看不同效果</span>\n  <ng-container *ntDataPlaceHolder>\n    <div class=\"list\" *ngIf=\"(paging.state$ | async) !== 'pending'\">\n      <div class=\"item\" *ngFor=\"let item of paging.data$ | async\">\n        {{item | json}}\n      </div>\n    </div>     \n  </ng-container>   \n  <div class=\"actions\">\n    <button class=\"fresh\" (click)=\"paging.fresh()\">刷新</button>\n  </div>\n</div>"},{"path":"basic/basic.component.ts","content":"import { Component, OnInit } from '@angular/core';\nimport { NgTreaterSetting, NG_TREATER_SETTINGS } from 'ng-treater';\n\n@Component({\n  selector: 'nt-placeholder-basic-example',\n  templateUrl: './basic.component.html',\n  styleUrls: ['./basic.component.css'],\n  providers: [\n    {provide: NG_TREATER_SETTINGS, useValue: <NgTreaterSetting>{\n      paging: {\n        start: 1,\n        size: 10,\n        indexKey: 'pageNo',\n        sizeKey: 'pageSize',\n        dataPlucker: ['data'],\n        totalPlucker: ['total'],\n        scrollLoading: false,\n        method: 'post'\n      }\n    }}\n  ]\n})\nexport class NtPlaceholderBasicExampleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"},{"path":"custome/custome.component.css","content":".list{\r\n  margin: 20px 0;\r\n}"},{"path":"custome/custome.component.html","content":"<div class=\"container\" ntPagingContainer #paging=\"ntPaging\" url=\"/api/getPagingData\">  \n  <span style=\"color: #888;font-size: small;\">*点击刷新查看效果</span>\n  \n  <ng-container *ntDataPlaceHolder>\n    <div class=\"list\" *ngIf=\"(paging.state$ | async) !== 'pending'\">\n      <div class=\"item\" *ngFor=\"let item of paging.data$ | async\">\n        {{item | json}}\n      </div>\n    </div>     \n  </ng-container>   \n\n  <div class=\"actions\">\n    <button class=\"fresh\" (click)=\"paging.fresh()\">刷新</button>\n  </div> \n</div>"},{"path":"custome/custome.component.ts","content":"import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'nt-placeholder-custome-example',\n  templateUrl: './custome.component.html',\n  styleUrls: ['./custome.component.css']\n})\nexport class NtPlaceholderCustomeExampleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"},{"path":"custome/dataPlaceholder.component.ts","content":"import { Component, OnInit } from '@angular/core';\r\nimport { DataPlaceholderAccessor, NtLoadingState } from 'ng-treater';\r\n\r\n@Component({\r\n  selector: 'app-data-placeholder',\r\n  template: `\r\n    <div class=\"placeholder\" >\r\n      <nz-spin *ngIf=\"state === 'pending'\"></nz-spin>\r\n      <nz-empty *ngIf=\"state === 'empty'\"></nz-empty>\r\n      <nz-empty *ngIf=\"state === 'failed'\" [nzNotFoundContent]=\"tpl\" >\r\n        <ng-template #tpl>\r\n          <span class=\"error-tip\">\r\n            请求失败，<a (click)=\"retry()\">点此重试</a>\r\n          </span>\r\n        </ng-template>\r\n      </nz-empty>\r\n    </div>\r\n  `\r\n})\r\nexport class DataPlaceholderComponent implements DataPlaceholderAccessor{\r\n\r\n  state!: NtLoadingState;\r\n  retry!: () =>  void;\r\n\r\n  writeState(state: NtLoadingState): void {\r\n    this.state = state;\r\n  }\r\n\r\n  registerRetryFunc(fn: any): void {\r\n    this.retry = fn;\r\n  }\r\n\r\n}"},{"path":"examples.module.ts","content":"\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { NG_TREATER_SETTINGS,  NgTreaterSetting, NgTreaterModule } from 'ng-treater';\r\n\r\nimport { mock, setup } from 'mockjs'\r\nimport { NtPlaceholderBasicExampleComponent } from './basic/basic.component';\r\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\r\nimport { DataPlaceholderComponent } from './custome/dataPlaceholder.component';\r\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\r\nimport { NtPlaceholderCustomeExampleComponent } from './custome/custome.component';\r\n\r\n\r\nsetup({\r\n  timeout: 3000\r\n})\r\n\r\nmock(/\\/api\\/getPagingData/, 'post', () => {\r\n  const rand = Math.random();\r\n  if(rand>0.5) {\r\n    return mock({\r\n      'data|10': [\r\n        {\r\n          'name': '@cname', \r\n          'category': '@ctitle', \r\n          'rank|1-100': 1,\r\n          'id|+1': 1, \r\n          'address': '@city',\r\n          'cdt': '@datetime'\r\n        }\r\n      ],\r\n      total: 200\r\n    })\r\n  } else {\r\n    return {\r\n      data: [],\r\n      total: 0\r\n    }\r\n  }\r\n})\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NtPlaceholderBasicExampleComponent,\r\n    NtPlaceholderCustomeExampleComponent,\r\n    DataPlaceholderComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NgTreaterModule,\r\n    NzEmptyModule,\r\n    NzSpinModule\r\n  ],\r\n  exports: [\r\n    NtPlaceholderBasicExampleComponent,\r\n    NtPlaceholderCustomeExampleComponent,\r\n  ],\r\n  providers: [\r\n    {provide: NG_TREATER_SETTINGS, useValue: <NgTreaterSetting>{\r\n      placeholder: DataPlaceholderComponent,\r\n      paging: {\r\n        start: 1,\r\n        size: 10,\r\n        indexKey: 'pageNo',\r\n        sizeKey: 'pageSize',\r\n        dataPlucker: ['data'],\r\n        totalPlucker: ['total'],\r\n        scrollLoading: false,\r\n        method: 'post'\r\n      },\r\n      simple: {\r\n        plucker: ['data'],\r\n        method: 'get'\r\n      }\r\n    }}\r\n  ]\r\n})\r\nexport class NtPlaceholderExamplesModule { }"}]